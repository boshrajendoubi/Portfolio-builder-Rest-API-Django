# Generated by Django 4.1.2 on 2022-12-03 17:58

import datetime
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='References',
            fields=[
                ('idPersonne', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='name: ')),
                ('familyName', models.CharField(max_length=100, verbose_name='family name: ')),
                ('Photo', models.ImageField(default='profilepic.jpg', max_length=200, upload_to='photos/Personne')),
                ('email', models.EmailField(max_length=60, verbose_name='email ')),
                ('PhoneNumber', models.PositiveBigIntegerField(verbose_name='phone number:   ')),
            ],
            options={
                'db_table': 'References',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('idPersonne', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='name: ')),
                ('familyName', models.CharField(max_length=100, verbose_name='family name: ')),
                ('Photo', models.ImageField(default='profilepic.jpg', max_length=200, upload_to='photos/Personne')),
                ('email', models.EmailField(max_length=60, verbose_name='email ')),
                ('password', models.CharField(max_length=100, verbose_name='Password:  ')),
                ('Careersummary', models.CharField(max_length=500, verbose_name='Decribe yourself ')),
            ],
            options={
                'db_table': 'User',
            },
        ),
        migrations.CreateModel(
            name='ProfessionalAccomplishements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CategorieProfessional', models.CharField(choices=[('Work', 'Work'), ('PersonalProject', 'PersonalProject'), ('freelance', 'freelance'), ('internship', 'internship')], default='Work', max_length=15)),
                ('titlework', models.CharField(max_length=100, verbose_name='title:  ')),
                ('justification', models.FileField(max_length=254, upload_to='Accomplishment/files')),
                ('professionalAccomplishements', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PortfolioApp.user')),
            ],
            options={
                'db_table': 'ProfessionalAccomplishements',
            },
        ),
        migrations.CreateModel(
            name='PhilosophicalStatement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('missionStatement', models.CharField(max_length=100, verbose_name='Mission Emplacement:  ')),
                ('board', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=10), size=8), size=8)),
                ('philosophicalStatement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PortfolioApp.user')),
            ],
            options={
                'db_table': 'PhilosophicalStatement',
            },
        ),
        migrations.CreateModel(
            name='Fonction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titlePost', models.CharField(max_length=100, verbose_name='Job title:  ')),
                ('dateFonction', models.DateField(default=datetime.date.today)),
                ('place', models.CharField(max_length=100, verbose_name='place: ')),
                ('fonction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PortfolioApp.user')),
            ],
            options={
                'db_table': 'Fonction',
            },
        ),
        migrations.CreateModel(
            name='EducationCareer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('Bac', 'Baccaleaureat'), ('Licence1', 'L1'), ('Licence2', 'L2'), ('Licence3', 'L3'), ('Master1', 'M1'), ('Master2', 'M2'), ('PHD', 'Phd'), ('Engineering1', 'Engineering 1'), ('Engineering2', 'Engineering 2')], default='Bac', max_length=12)),
                ('description', models.CharField(max_length=500, verbose_name='Decribe yourself ')),
                ('year', models.DateField(default=2022)),
                ('place', models.CharField(max_length=100, verbose_name='place: ')),
                ('justification', models.FileField(max_length=254, upload_to='Career/files')),
                ('educationCareer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PortfolioApp.user')),
            ],
            options={
                'db_table': 'EducationCareer',
            },
        ),
        migrations.CreateModel(
            name='Biography',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('softskills', models.CharField(choices=[('communication', 'communication'), ('Team work', 'Team work'), ('stress management', 'stress management'), ('solution oriented', 'solution oriented'), ('orthers', 'others')], default='communication', max_length=17)),
                ('email', models.EmailField(max_length=60, verbose_name='email ')),
                ('SocialLinkType', models.CharField(choices=[('facebook', 'Facebook'), ('Linkedin', 'Linkedin'), ('Other', 'Other')], default='facebook', max_length=10)),
                ('SocialLink', models.URLField(max_length=300, verbose_name='url:  ')),
                ('PhoneNumber', models.PositiveBigIntegerField(verbose_name='phone number:   ')),
                ('personalWebSite', models.URLField(max_length=300, verbose_name='Personal website  ')),
                ('biography', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PortfolioApp.user')),
            ],
            options={
                'db_table': 'Biography',
            },
        ),
        migrations.CreateModel(
            name='AwardAndHonors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('awardNAme', models.CharField(max_length=100, verbose_name='award title:  ')),
                ('obtentionDate', models.DateField(default=datetime.date.today)),
                ('levelR', models.CharField(choices=[('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low')], default='High', max_length=10)),
                ('justification', models.FileField(max_length=254, upload_to='honors/files')),
                ('awardAndHonors', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PortfolioApp.user')),
            ],
            options={
                'db_table': 'AwardAndHonors',
            },
        ),
        migrations.CreateModel(
            name='AssociativeExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post', models.CharField(max_length=100, verbose_name='Position:  ')),
                ('emplacement', models.CharField(max_length=100, verbose_name='Position:  ')),
                ('dateDebut', models.DateField(default=datetime.date.today)),
                ('dateFin', models.DateField(default=datetime.date.today)),
                ('description', models.CharField(max_length=500, verbose_name='Decribe yourself ')),
                ('associativeExperience', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PortfolioApp.user')),
            ],
            options={
                'db_table': 'AssociativeExperience',
            },
        ),
    ]
